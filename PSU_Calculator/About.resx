<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RichTextBox1.Text" xml:space="preserve">
    <value>Version 1.5 
+ Testberichte nun abrufbar.
+ Rauskopieren der aktuellen Komponentenwahl möglich.

Version 1.4 (Beta)
+ Suche verbessert, suche nach mehreren teilen nun möglich
+ Netzteil Wattrange angepasst
+ Mehrere preissuchmaschinen möglich

Version 1.3.0.0 (Stable)
+ Suche bei CPU's und GPU's
+ neuer NT Empfehlungsalgorithmus
+ Tabstop funktion
+ einige ATI Radeon HD 4000 Karten
+ lokales laden/speichern von Daten.
+ Physx karten jetzt mit suche

Version 1.2.0.0 (Stable)
+ Netzteile als URL für Foren in zwischenablage kopieren
+ So. 2011 CPU's inzugefügt
+ R9 280X
+ Automatische Fenstergrössenanpassung
- Menu Optionen
+ Linux Mono Support
+ OC Option zurück, mit LN2
+ Auto Update aus dem Inet von CPU's und GPU's   (Beta)

Version 1.1.0.0 (Stable)
Code Refactoring
GUI angepasst
Angezeigte empfohlene Netzteile angepasst
+Tripple CF/SLI Support
+ Kühlart CPU angepasstr
+ Support für GPGPU Rigs mit vielen Grakas
- Chat
- Auto updater
- Theme auswahl

Version 1.0.0.0 (Stable)
+ Bugs gefixt
+ Phys-X  möglich
+ CPUs + GPUs hinzugefügt
+ 4-Way SLI / CF möglich
+ Stable!

Version 1.0.14.10.05 ----&gt; RC9
+ Unterstützung für 2 CPUs
+ SSDs hinzugefügt
+ Intel Core i7 4790(k) hinzugefügt
+ GTX 750(ti) hinzugefügt
+ Radeon R7 Serie hinzugefügt
+ AMD Athlon Serie hinzugefügt
+ Radeon R9 290X hinzugefügt
+ Community Chat hinzugefügt (Für Beratung etc.)


Version 1.0.14.10.04 ----&gt; RC8
+ Xeon E3 1231 gefixt
+ SLI / CF *Hotfix*
+ Intel Core 2 Quad CPUs hinzugefügt

Version 1.0.14.10.03 ----&gt; RC7
+ Fehler behoben (SLI / CF)
    (bei GPU OC wurde nur eine Karte berechnet)
+ Haswell E CPUs hinzugefügt
+ Benutzeroberfläche angepasst
+ PCI-Karten
+ Andere Geräte (Cardreader etc.)
+ FAQ hinzugefügt
+ GeForce GTX 650Ti hinzugefügt
+ GeForce GTX 780 hinzugefügt
+ Liste der donations hinzugefügt
+ Intel Xeon E3 Serie hinzugefügt
+ Intel Core i5 4690(k) hinzugefügt
+ Code cleanup

Version 1.0.14.10.02 ----&gt; RC6
+ Bug beim Updater gefixt (Infinity Pop-up)
+ GeForce Titan Black hinzugefügt
+ AMD Radeon HD 6xxx Serie hinzugefügt
+ Netzteil Liste sortiert (Qualität absteigend)
+ Weitere Netzteile hinzugefügt
+ Feedback der Community umgesetzt
+ Korrektur falscher Watt Angaben
+ Laufwerke/Festplatten auf 10 erweitert
+ Lüfter auf 13 erweitert
+ OC Profile erweitert / verbessert
+ PCGHX Logos / Grafiken 'erstmal' entfernt
+ Windows 10 Kompatibel
+ GUI Fehler behoben


Version 1.0.14.10.01 ----&gt; RC5
+ Intel Core i7 2600(k) gefixt
+ Theme auswahl (Classic / Modern)
+ Kleinere anpassungen
+ Programmstart beschleunigt

Version 1.0.14.09.30 ----&gt; RC4
+ Fehler gefixt
+ GTX 760 hinzugefügt

Version 1.0.14.09.29 ----&gt; RC3
+ Updater implementiert (Test!)

Version 1.0.14.09.28 ----&gt; RC2
+ Mehr CPUs (Intel i3)
+ Mehr GPUs (GeForce 4xx)

Version 1.0.14.09.27 ----&gt; RC1
+ Paar neue Netzteile
+ Mehr GPUs (GTX 5XX)
+ Mehr CPUs (Intel Core 2)
+ Cleanup! 

Version 1.0.14.09.26
+ Mehr CPUs (AMD)
+ Code weiter optimiert (thx Rho!)
+ Fehler behoben (SLI / CF)

Version 1.0.14.09.25
+ Mehr CPUs (Intel i5)
+ Netzteil Übersicht verbessert

Version 1.0.14.09.24
+ GPUs und CPUs hinzugefügt
+ Stromverbrauch wird live berechnet
+ Benutzbarkeit verbessert

Version 1.0.14.09.23
+ GUI optimiert
+ Sourcecode optimiert
+ Code cleanup

Version 1.0.14.09.22
+ Mehr CPUs und GPUs hinzugefügt
+ Falsche TDP angaben korrigiert
+ Tweaks an der GUI
+ SLI / CF hinzugefügt
+ Bugs gefixt


Version 1.0.14.09.21
+ Benutzeroberfläche angepasst
+ Musik Modul erstmal entfernt
+ Rechtschreibfehler korrigiert 


Version 1.0.14.09.20
- First Release!</value>
  </data>
</root>